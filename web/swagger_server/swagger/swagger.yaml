---
swagger: "2.0"
info:
  description: "Stores and Retrieves information needed for the robot simulation"
  version: "1.0.0"
  title: "Team 1 Robot Simulation API"
host: "192.168.99.100"
basePath: "/v1"
schemes:
- "http"
paths:
  /:
    get:
      tags:
      - "Problems"
      summary: "Problems"
      description: "Returns a list of all of the Problems generated. This can be an\
        \ empty list.\n"
      operationId: "get_problems"
      produces:
      - "application/json"
      - "application/xml"
      parameters: []
      responses:
        200:
          description: "An array of Problems"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Problem"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.problems_controller"
    post:
      tags:
      - "Problems"
      summary: "Creates a new problem and returns a problemID"
      description: ""
      operationId: "add_problem"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "problem"
        description: "Problem object that needs to be updated."
        required: true
        schema:
          $ref: "#/definitions/Problem"
      responses:
        200:
          description: "The id of the new problem generated"
          schema:
            type: "integer"
            format: "int32"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.problems_controller"
  /id={problem_id}/:
    get:
      tags:
      - "Problem"
      summary: "Problems"
      description: "Returns a specific problem\n"
      operationId: "get_problem"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "problem_id"
        in: "path"
        description: "The id of the problem being manipulated"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "A Problem type, containing all values"
          schema:
            $ref: "#/definitions/Problem"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.problem_controller"
    put:
      tags:
      - "Problem"
      summary: "Update the existing problem"
      description: ""
      operationId: "update_problem"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "problem_id"
        in: "path"
        description: "The id of the problem being manipulated"
        required: true
        type: "integer"
        format: "int32"
      - in: "body"
        name: "problem"
        description: "Problem object that needs to be updated."
        required: true
        schema:
          $ref: "#/definitions/Problem"
      responses:
        404:
          description: "Problem not found"
        405:
          description: "Validation exception"
      x-swagger-router-controller: "swagger_server.controllers.problem_controller"
    delete:
      tags:
      - "Problem"
      summary: "Delete Problem"
      description: "This removes the problem by the given ID"
      operationId: "delete_problem"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "problem_id"
        in: "path"
        description: "The id of the problem being manipulated"
        required: true
        type: "integer"
        format: "int32"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Problem not found"
      x-swagger-router-controller: "swagger_server.controllers.problem_controller"
definitions:
  Problem:
    type: "object"
  Error:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
      fields:
        type: "string"
